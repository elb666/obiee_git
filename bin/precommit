#!/bin/bash
# precommit
# By: Eric Brown eric_brown@harvard.edu
# Created: Fri May 20 2016
# ======================================================================= #

usage()
{
    cat <<-EOF
	Usage: $PROGNAME [OPTIONS]
	
	Precommit script for OBIEE Git. Convert latest and greatest RPD from 
	\$MW_HOME to xml in \$BI_REPO/repository

	Options:
	          -h                     display this message and exit
	          -v                     be verbose

EOF
}

setandcheckglobalvars()
{
	ARG0="$0"
	
	# if script was called by link, resolve the link until we get zomething real
	while [[ -h $ARG0 ]]; do
		ARG0="$(readlink "$ARG0")"
	done
	
	PROGNAME="${ARG0##*/}"
	PROGDIR="${ARG0%/*}"
	
	echo -e "Starting $PROGNAME\n"

	# Exit status codes:
	SUCCESS=0
	E_DEFAULT=1
	E_ENVIRONMENT=2
	E_SCRIPT_ERROR=99

	getoptions "$@"

	[[ -d $MW_HOME ]] || \
		bail "Environment variable MW_HOME is not set or directory is not accessible" $E_ENVIRONMENT

	# Read config file
	. $MW_HOME/obieegit.conf || \
		bail "Failed to source config file $file" $E_ENVIRONMENT

	# Verify config files set required variable
	[[ -d $BI_REPO ]] || \
		bail "$MW_HOME/obieegit.conf did not set variable BI_REPO or directory is not accessible." $E_ENVIRONMENT

	# set path to OBIEE-Git lib
	PROGLIB="$PROGDIR/../lib"
	[[ -d $PROGLIB ]] || \
		bail "Directory "$PROGLIB" must contain OBIEE-Git library" \
		$E_ENVIRONMENT

	CONVERSION_TIMOUT=240

}

bail()
{	# bail "error message" [exit status code]
	# prints error message to stderr and exits with exit status code if 
	# passed or $E_DEFAULT if set or else 1.

	local _errorcode=$(())

	if [[ $2 ]]; then 
		_errorcode=$2
	elif [[ $E_DEFAULT ]]; then 
		_errorcode=$E_DEFAULT
	else 
		_errorcode=1
	fi

	echo -e "ERROR:" "$1" >&2
	exit $_errorcode
}

getoptions()
{
	O_VERBOSE=$((0))
	
	OPTIND=1
	while getopts "hv" OPT ; do
		case $OPT in 
		h )
			usage
			exit
			;;
		v )
			O_VERBOSE=1
			;;
		* )
			usage
			exit $E_DEFAULT
			;;
		esac
	done

	shift $((OPTIND-1))
}

rpdtoxml()         # rpdtoxml rpd.rpd xmldir [rpd password]
{
	. $MW_HOME/instances/instance1/bifoundation/OracleBIApplication/coreapplication/setup/bi-init.sh 
	$MW_HOME/Oracle_BI1/bifoundation/server/bin/biserverxmlgen \
		-R "$1" \
		-D "$2" \
		${3:+-P $3}
}
convertnewestrpd()
{
	local _rpd
	local _xml_dir="$BI_REPO/repository"

	echo -e "Getting online rpd...\n"
	read -r _rpd < <(ls -1t $MW_HOME/instances/instance1/bifoundation/OracleBIServerComponent/coreapplication_obis1/repository/*.rpd)

	# if BI_REPO/repository doesn't exist, create it
	if ! [[ -d $_xml_dir ]]; then
		echo -e "Directory $_xml_dir does not exist. Creating...\n"
		mkdir "$_xml_dir"
	fi

	echo -e "Converting rpd to xml...\n"

	rpdtoxml "$_rpd" "$_xml_dir" "$RPD_PASSWORD" &
	mypid=$!

	i=0
	while echo -n "."; do
       		sleep 1
		# if the conversion is done, then break
       		kill -0 $mypid > /dev/null 2>&1  || break
		
		# if the timeout has passed, then kill the conversion and bail
		if (( ++i > $CONVERSION_TIMOUT )); then
			pkill -P $mypid
			bail "Conversion timed out after $CONVERSION_TIMOUT seconds."
		fi
	done

	# get the exit status of the the conversion
	wait $mypid
	exitstatus=$?
	[[ $exitstatus = 0 ]] || \
		bail "Conversion failed." 
	
	echo -e "\nConversion complete.\n"
}

main()
{
	setandcheckglobalvars "$@" || \
		bail "Function setandcheckglobalvars failed" $E_SCRIPT_ERROR

        if [[ $O_NOCONVERT > 0 ]]; then
		echo -e "Convert rpd bypassed.\n"
	else 
		convertnewestrpd || \
			bail "Function convertnewestrpd failed" $E_SCRIPT_ERROR
	fi

	echo -e "OG precommit complete.\n"

	exit $SUCCESS
}


main "$@"

